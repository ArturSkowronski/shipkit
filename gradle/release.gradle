apply plugin: "org.mockito.release-notes"
apply plugin: "org.mockito.release-tools.versioning"

notes {
    notesFile = file("docs/release-notes.md")
    gitHubRepository = "mockito/mockito-release-tools-example"
    gitHubAuthToken = "e7fe8fcdd6ffed5c38498c4c79b2a68e6f6ed1bb" //read-only token
    gitHubLabelMapping = ["noteworthy": "Noteworthy", "bugfix": "Bugfixes"]
}

task gitAddBumpVersion(type: Exec) {
    mustRunAfter tasks.bumpVersionFile
    commandLine = ["git", "add", "version.properties"]
}

task gitAddReleaseNotes(type: Exec) {
    mustRunAfter tasks.updateReleaseNotes
    commandLine = ["git", "add", notes.notesFile]
}

task gitCommit(type: Exec) {
    mustRunAfter tasks.gitAddBumpVersion, tasks.gitAddReleaseNotes
    commandLine = ["git", "commit", "--author", "Mockito Release Tools <mockito.release.tools@gmail.com>",
                   "-m", "Bumped version and updated release notes"]
}

task prepareRelease {
    dependsOn bumpVersionFile, updateReleaseNotes, gitAddBumpVersion, gitAddReleaseNotes, gitCommit
    description = "Prepares release. Also useful for local testing."
}

task finalizeRelease {
    description = "Finalizes the release, pushes code, publishes to repositories."
}

allprojects {
    plugins.withId("maven-publish") {
        project.publishing {
            publications {
                DefaultPublication(MavenPublication) {
                    from components.java
                }
            }
        }

        project.apply plugin: "com.jfrog.bintray"
        finalizeRelease.dependsOn bintrayUpload

        bintray {
            user = 'szczepiq'
            key = System.env.BINTRAY_API_KEY

            afterEvaluate {
                //we have to access publications as late as possible,
                // otherwise stuff does not work, for example pom does not have dependencies :)
                publications = project.publishing.publications*.name
            }

            publish = true

            pkg {
                repo = 'mockito-release-tools-example-repo'
                userOrg = 'mockito'
                name = 'mockito-release-tools-example'
                desc = project.description
                websiteUrl = 'http://mockito.org'
                issueTrackerUrl = 'https://github.com/mockito/mockito-release-tools/issues'
                vcsUrl = 'https://github.com/mockito/mockito-release-tools.git'
                licenses = ['MIT']
                labels = ['continuous delivery', 'release automation', 'mockito']
                publicDownloadNumbers = true

                // optional version attributes
                version {
                    vcsTag = "v$project.version"
                    gpg {
                        sign = true
                    }
                }
            }
        }
    }
}